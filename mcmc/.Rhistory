install.packages('rstan')
model_basic
plot(model_basic, pars="w")
model_ridge
model_ridge_2
model_ridge
model_sparse
model_sparse
plot(model_sparse, pars="z")
plot(model_sparse, pars="w")
plot(model_sparse, pars="z")
rnorm(10)
?poss
?poiss
?pois
?poisson
?rpoisson
?rpoiss
?rpois
?rpois
mvnorm
mvnorm
mvrnorm
diag(runif(5))
true.weights
X
t
lm(t ~ X)
true.weights
generate.data(10,2)
generate.data(10,2)
generate.data(10,2)
generate.data(10,3)
generate.data(10,4)
generate.data(15,4)
generate.data(15,4)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
?mvrgamma
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
?e
?exp
?exp
generate.data(15,5)
generate.data(15,5)
exp(c(1,2,3))
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
generate.data(15,5)
get.seed()
sed.seed
seed()
set.seed
head(synth_reg)
generate.data(15,5)
generate.data(15,5)
rpois(1, 0)
rpois(1, 0.0000000000000000000000001)
rpois(1, 0.0000000003)
rpois(1, 0.0000000003)
rpois(1, 0.0000000003)
rpois(1, 0.0000000003)
rpois(1, 0.0000000003)
data
data
model_robust
plot(model_robust, pars="w")
plot(model_sparse, pars="w")
plot(model_sparse, pars="w")
plot(model_robust, pars="w")
plot(model_robust, pars="w")
pairs(model_robust)
plot(model_robust, pars="w")
model.1
data$w
head(model.1)
model.1$w
model.1
plot(model_robust, pars="w")
plot(model.random.effects)
plot(data$w)
plot(model.random.effects)
data$w
model.random.effects
head(data)
head(data$x)
head(data$X)
head(data$t)
head(scale(data$X)0
head(scale(data$X))
head(data$X)
data$X <- 'hey
'
data$X
data.scaled
data$X
scaled(data$X)
scale(data$X)
as.matrix(scale(data$X))
data.scaled
data.scaled$foo <- 'foo'
data
data.scaled
model.random.effects.scaled
data.scaled$weights
model.random.effects.scaled
?dpois
?dpois
?optim
optim(rep(0, 10), loglike, X = X, t = t)
X
optim(rep(0, 10), loglike, X = data$X, t = data$t)
optim(rep(0, 10), loglike, X = data$X, t = data$t)
optim(rep(1, 10), loglike, X = data$X, t = data$t)
optim(rep(2, 10), loglike, X = data$X, t = data$t)
optim(rep(0, 10), loglike, X = data$X, t = data$t)
data$weights
head(data$X)
head(data$X, 1)
head(data$X, -1)
dim(data$X)
optim(rep(0, 10), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
optim(rep(0, 11), loglike, X = data$X, t = data$t)
data$weights
?optim
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'BFGS', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'CG', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'CG', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'CG', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'CG', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, gr = 'CG', X = data$X, t = data$t)
optim(rep(0, 11), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
?mvdnorm
?mvrnorm
?mvnorm
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(c(rep(0, 10), rep(1, 75)), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
dmvnorm
?dnorm
model_robust
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
data$weights
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
data$weights
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
?dpois
?dpois
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(0, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(.5, 85), fn = loglike, X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, X = data$X, t = data$t)
?optim
optim(rep(1, 85), fn = loglike, method=c("Nelder-Mead"), X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, method=c("Nelder-Mead"), X = data$X, t = data$t)
optim(rep(1, 85), fn = loglike, method=c("CG"), X = data$X, t = data$t)
data$weights
optim(rep(0, 85), fn = loglike, method=c("CG"), X = data$X, t = data$t)
optim(rnorm(85,0,1), fn = loglike, method=c("CG"), X = data$X, t = data$t)
optim(rnorm(85,0,1), fn = loglike, method=c("CG"), X = data$X, t = data$t)
optim(rnorm(85,0,1), fn = loglike, method=c("CG"), X = data$X, t = data$t)
synth_reg
head(synth_reg)
synth_reg$X
synth_reg
synth_reg$t
synth_reg$X
synth_reg
synth_reg$Phy
synth_reg$N
synth_reg$M
warnings())
warnings()
sim(synth_reg$Phy)
dim(synth_reg$Phy)
warning()
warnings()
synth_reg$Phy[2]
synth_reg$Phy[2] + 5
synth_reg$Phy[2] + synth_reg$t[2]
sum(synth_reg$Phy[2] + synth_reg$t[2])
synth_reg$Phy[2] + synth_reg$t[2]
synth_reg$t[2]
synth_reg$t[4]
?dnorm
dnorm(-1, 0, 1)
dnorm(-1, 0, 1, log=TRUE)
dnorm(-1, 0, 1, log=TRUE)
log(dnorm(-1, 0, 1))
synth_reg$t[2]
synth_reg$t[6]
synth_reg$t[10]
synth_reg$t[14]
synth_reg$M
weights.mle.robust
o.robust
weights.mle.robust
model_robust
weights.mle.robust
weights.mle.robust
weights.mle.robust
weights.mle.robust
model_robust
model.random.effects
model.random.effects
model_robust
model_robust
model_robust
model_robust
model_robust
