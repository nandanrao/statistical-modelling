library(lasso2)
data(Prostate)
head(Prostate)
plot(lm(lcavol ~ ., Prostate))
summary(lm(lcavol ~ ., Prostate))
head(Prostate)
summary(lm(lpsa ~ ., Prostate))
install.packages("caret")
n <- sample(1:20)
n
size(n)
length(n)
p.random <- sample(Prostate)
head(p.random)
head(prostate)
head(Prostate)
sample.indexes <- sample(nrows(Prostate))
sample.indexes <- sample(nrow(Prostate))
sample.indexes
sample.indices <- sample(nrow(Prostate))
sample.indices <- sample(nrow(Prostate), size = 67)
p.train <- Prostate[sample.indices, ]
p.test <- Prostate[-sample.indices, ]
head(p.train)
head(p.test)
length(p.train)
length(p.test)
nrow(p.test)
nrow(p.train)
model <- lm(lpsa ~ ., p.train)
summary(model)
model <- lm(lpsa ~ ., scale(p.train))
scale(p.train)
p.scaled <- preProcess(Prostate[, -lpsa], method = c("center", "scale"))
library(caret)
p.scaled <- preProcess(Prostate[, -lpsa], method = c("center", "scale"))
p.scaled <- preProcess(Prostate[, -Prostate$lpsa], method = c("center", "scale"))
p.scaled <- preProcess(subset(Prostate, -c(lpsa)), method = c("center", "scale"))
p.scaled <- preProcess(subset(Prostate, select= -c(lpsa)), method = c("center", "scale"))
p.scaled
library(dplyr)
Prostate %>% mutate_each_(funs(scale), vars = -c(lpsa))
Prostate %>% mutate_each_(funs(scale), vars = -c("lpsa"))
summary(Prostate)
p.scaled <- preProcess(subset(Prostate, select= -c(lpsa)), method = c("center", "scale"))
head(p.scaled)
c(1,2,3)[which(x != 1)]
Prostate %>% mutate_each_(funs(scale), vars = which(colname(Prostate) != "lpsa"))
Prostate %>% mutate_each_(funs(scale), vars = which(colnames(Prostate) != "lpsa"))
which(colnames(Prostate) != "lpsa")
colnames(Prostate)
?filter
colnames(Prostate)[-lpsa]
colnames(Prostate)[which(colnames(Prostate) != "lpsa")]
Prostate %>% mutate_each_(funs(scale), vars = colnames(Prostate)[which(colnames(Prostate) != "lpsa")])
model <- lm(lpsa ~ ., scale(p.train))
p.train
p.scaled
model <- lm(lpsa ~ ., scale(p.train))
p.train
model <- lm(lpsa ~ ., p.train)
model
model <- lm(lpsa ~ ., p.train, scale=TRUE, center=TRUE)


p.scaled
typeof(p.scaled)
model <- lm(lpsa ~ ., p.train)
summary(model)
model <- lm(lpsa ~ ., p.train)
summary(model)
head(p.train)
head(p.scaled)
head(p.scaled)
head(Prostate)
model <- lm(lpsa ~ ., p.train)
summary(model)
model <- lm(lpsa ~ ., p.train)
summary(model)
plot(model)
model <- lm(lpsa ~ ., p.train[-32, ])
plot(model)
model <- lm(lpsa ~ ., p.train)
summary(model)
p.train[32, ]
influences(model)$hat
influence(model)
influence(model)$hat
head(p.train)
nrow(p.train)
nrow(p.train[-32, ])
model.cleaned <- lm(lpsa ~ ., p.train[-32, ])
summary(model.cleaned)
plot(mode.cleaned)
plot(model.cleaned)
influence(model.cleaned)$hate
influence(model.cleaned)$hat
influence(model.cleaned)$hat[32]
p.train[32, ]
nrows(p.train)
nrow(p.train)
rownames(p.train)
rownames(p.train)[which(rownames(p.train) != "32")]
p.train["32", ]
p.train[-"32", ]
p.train[which(rownames(p.train) != "32"), ]
p.train[which(rownames(p.train) != "32"), ]["32"]
p.train[which(rownames(p.train) != "32"), ]["32", ]
p.train[which(rownames(p.train) != "32"), ]["31", ]
p.no32 <- p.train[which(rownames(p.train) != "32"), ]
model.no32 <- lm(lpsa ~ ., p.no32)
summary(model.no32)
plot(model.no32)
summary(model)
?predict
predict(model, p.test)
summary(predict(model, p.test))
predict.lm(model, p.test)
predict(model, p.test)
plot(predict(model, p.test))
plot(predict(model, p.test))
layout(1:2)
plot(predict(model, p.test))
plot(p.test$lpsa)
head(p.test)
p.test
head(p.train)
head(data.matrix(p.train))
data.matrix(p.train)
data.matrix(subset(p.train, select = -c(lpsa)))
X <- data.matrix(subset(p.train, select = -c(lpsa)))
solve(t(X) %*% X)
X %*% solve(t(X) %*% X) %*% t(X)
hat <- X %*% solve(t(X) %*% X) %*% t(X)
sum(hat)
head(hat)
influence(lm(lpsa ~ ., p.train))$hat
head(hat)
X <- data.matrix(subset(p.train, select = -c(lpsa)))
head(X)
hat <- X %*% solve(t(X) %*% X) %*% t(X)
head(hat)
influence(lm(lpsa ~ ., p.train))$hat
hat <- X %*% solve(t(X) %*% X) %*% t(X)
X <- data.matrix(subset(Prostate, select = -c(lpsa)))
hat <- X %*% solve(t(X) %*% X) %*% t(X)
head(hat)
influence(lm(lpsa ~ ., Prostate))$hat
X <- data.matrix(subset(Prostate, select = -c(lpsa)))
head(X)
hat <- X %*% solve(t(X) %*% X) %*% t(X)
head(hat[0-5, ])
head(hat[, 0:10])
influence(lm(lpsa ~ ., Prostate))$hat
getwd()
setwd("../scratch")
getwd()
sum(hat)
sum(hat[1,])
apply(hat, 1, sum)
setwd("../1")
X <- data.matrix(subset(Prostate, select = -c(lpsa)))
influence(lm(lpsa ~ ., Prostate))$hat
hat <- X %*% solve(t(X) %*% X) %*% t(X)
 head(hat[, 1:10])
head(Prostate)
head(X)
influence(lm(lpsa ~ ., Prostate))$hat
X <- data.matrix(subset(Prostate, select = -c(lpsa)))
X
head(X)
hat <- X %*% solve(t(X) %*% X) %*% t(X)
 head(hat[, 1:10])
influence(lm(lpsa ~ ., Prostate))$hat
head(wood.data.dirty)
wood.data.dirty
?lm
X <- colbind(rep(1, nrows(Prostrate)), data.matrix(subset(Prostate, select = -c(lpsa))))
?colbind
X <- cbind(rep(1, nrows(Prostrate)), data.matrix(subset(Prostate, select = -c(lpsa))))
X <- cbind(rep(1, nrow(Prostrate)), data.matrix(subset(Prostate, select = -c(lpsa))))
?nrow
X <- cbind(rep(1, nrow(Prostate)), data.matrix(subset(Prostate, select = -c(lpsa))))
head(X)
influence(lm(lpsa ~ ., Prostate))$hat
hat <- X %*% solve(t(X) %*% X) %*% t(X)
head(hat[, 0:10])
apply(hat, 1, sum)
apply(hat, 2, sum)
hat
head(hat)
influence(lm(lpsa ~ ., p.train))$hat
head(hat[, 0:10])
model <- lm(lpsa ~ ., p.train)
summary(model)
getwd())
getwd()
dat.raw <- read.csv("synthetic_regression.txt", sep=" ")
dat.estimates
length(dat.estimates)
dim(dat.estimates)
dim(dat.estimates)[1]
dat.scaled.residuals
dat.scaled.residuals
dat.s.r
dat.s.r.2
dat.hats.large
plot(dat.model)
p
dat.model
data.frame(dat.model)
dat.model$fitted
dat.model$resid
dat.hats
dat.model.fitted
mod
?cut
mod
mod
mod
mod
mod
mod
filter(mod, high.leverage == TRUE)
filter(mod, high.leverage == TRUE)
mod
dat.hats.large
dat.hats
31/300
3*31/300
dat.model$fitted
dat.model$resid
plot(dat.model)
